% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/restructure.R
\name{add_rows_at_value}
\alias{add_rows_at_value}
\title{Add empty rows at specified values in a column}
\usage{
add_rows_at_value(
  .data,
  col,
  vals,
  where = c("after_last", "before_first", "after_each", "before_each"),
  no_match = c("error", "warn", "ignore"),
  nrows = 1,
  ...
)
}
\arguments{
\item{.data}{a data frame or data frame extension.}

\item{col}{column to search for values.}

\item{vals}{character vector of value(s) to search for in \code{col}.}

\item{where}{where to insert rows relative to the values in \code{vals}.}

\item{nrows}{number of empty rows to insert at each location.}

\item{...}{these dots are included to support error-checking and must be empty.}

\item{nomatch}{what to do if a value in \code{vals} doesn't appear in \code{col}.}
}
\value{
An updated version of \code{.data} with new empty rows inserted.
}
\description{
Adds empty row(s) based on specified value(s) in \code{col}. By default, will
insert one empty row after the last occurrence in \code{col} of each value passed
to \code{vals}.
}
\details{
In the pre-release version of this function, used in some lighthouse code, values to search for were passed to
\code{...} as unquoted symbols. Values must now be now instead be passed to \code{vals}
as a character vector. The arguments \code{.where} and \code{.nrows} have also been renamed to \code{where} and \code{nrows}. The function will attempt to detect and give an informative warning if it is called with "old" parameters (e.g., with a deprecated argument or with a list of symbols rather than a character vector).
Also see \code{\link[=syms_to_chr]{syms_to_chr()}}, which is provided as a utility for adapting old code.
}
\examples{
set.seed(13)
ex_data <- tibble::tibble(
  category = sort(sample(LETTERS[1:3], 10, replace = TRUE)),
  var = round(runif(10), 2)
)

add_rows_at_value(ex_data, category, c("A", "B"))

add_rows_at_value(ex_data, category, c("A", "C"), where = "after_each")

add_rows_at_value(
  ex_data,
  category,
  unique(ex_data$category),
  where = "before_first",
  nrows = 2
)

}
