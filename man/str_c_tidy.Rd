% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/character.R
\name{str_c_tidy}
\alias{str_c_tidy}
\title{Tidy string concatenation}
\usage{
str_c_tidy(.cols, sep = "", collapse = NULL, na.rm = FALSE)
}
\arguments{
\item{.cols}{Columns to concatenate. Can be specified using tidyselect semantics.}

\item{sep}{Separator to use between concatenated values. Defaults to "".}

\item{collapse}{Untested, may give unpredictable results.}

\item{na.rm}{If \code{TRUE}, missing values will be removed prior to concatenation. Defaults to \code{FALSE}.}
}
\value{
A character vector of concatenated strings, one per row of the input data frame.
}
\description{
This function performs a tidyverse-friendly string concatenation. It takes a data frame or tibble and a selection of columns, concatenates the string values in each row, and returns the concatenated strings as a vector.
}
\details{
This function is designed to work seamlessly with tidyverse pipelines. It takes a data frame or tibble as input, and uses tidyselect semantics to choose the columns to concatenate. The resulting concatenated strings are returned as a vector, which can be easily added to the data frame using \code{dplyr::mutate()}.

If \code{na.rm = TRUE}, the function will remove missing values before concatenation. It does this by temporarily replacing \code{NA} with a placeholder string, concatenating, and then removing the placeholder and any trailing separators.
}
\examples{
df <- tibble::tribble(
  ~x, ~y, ~z,
  "a", "b", "c",
  "d", NA, "f",
  "g", "h", NA
)

df \%>\% mutate(combined = str_c_tidy(x, y, z))
df \%>\% mutate(combined = str_c_tidy(starts_with("y"), z, na.rm = TRUE))

}
