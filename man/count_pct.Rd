% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/counts.R
\name{count_pct}
\alias{count_pct}
\title{Count observations with percentage}
\usage{
count_pct(
  .data,
  ...,
  na.rm = FALSE,
  .by = NULL,
  wt = NULL,
  sort = FALSE,
  .drop = dplyr::group_by_drop_default()
)
}
\arguments{
\item{...}{Variables to group by. Will be passed to \code{\link[dplyr:count]{dplyr::count()}}.}

\item{na.rm}{If \code{TRUE}, removes rows with \code{NA} values before calculations.}

\item{.by}{a selection of columns to group by for just this operation, functioning as an alternative to \code{\link[dplyr:group_by]{dplyr::group_by()}}. Percentages will be computed within each group rather than for the grand total. See examples.}

\item{wt}{<\code{\link[rlang:args_data_masking]{data-masking}}> Frequency weights.
Can be \code{NULL} or a variable:
\itemize{
\item If \code{NULL} (the default), counts the number of rows in each group.
\item If a variable, computes \code{sum(wt)} for each group.
}}

\item{sort}{If \code{TRUE}, will show the largest groups at the top.}

\item{.drop}{Handling of factor levels that don't appear in the data, passed
on to \code{\link[dplyr:group_by]{group_by()}}.

For \code{count()}: if \code{FALSE} will include counts for empty groups (i.e. for
levels of factors that don't exist in the data).

\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}} For \code{add_count()}: deprecated since it
can't actually affect the output.}
}
\value{
A data frame with columns for grouping variables, \code{n} (the count of observations in each group), and \code{pct} (the percentage of total observations in each group).
}
\description{
This variant of \code{\link[dplyr:count]{dplyr::count()}} includes a column showing percentage of total observations for each group.
}
\details{
Percentages within subgroups can be obtained by grouping with \code{group_by}
}
\examples{
library(dplyr)

## note effect of `na.rm` on percentages
dplyr::starwars \%>\%
  count_pct(gender)

dplyr::starwars \%>\%
  count_pct(gender, na.rm = TRUE)

## note effect of grouping on percentages
# no grouping: \% of grand total
ggplot2::mpg \%>\%
 count_pct(year, cyl)

# grouping w `group_by()`: \% of group, output is grouped
ggplot2::mpg \%>\%
  dplyr::group_by(year) \%>\%
  count_pct(cyl)

# grouping w `.by`: \% of group, output isn't grouped
ggplot2::mpg \%>\%
  count_pct(cyl, .by = year)

}
\concept{count variants}
