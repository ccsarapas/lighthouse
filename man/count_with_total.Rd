% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_group.R
\name{count_with_total}
\alias{count_with_total}
\title{Count observations with totals row}
\usage{
count_with_total(
  .data,
  ...,
  totals_for = NULL,
  label = "Total",
  first_row = FALSE,
  wt = NULL,
  sort = FALSE,
  name = NULL,
  .drop = dplyr::group_by_drop_default()
)
}
\arguments{
\item{...}{<\code{\link[rlang:args_data_masking]{data-masking}}> Variables to group
by.}

\item{totals_for}{The variable to total for. If omitted, defaults to the first variable in \code{...}.}

\item{label}{The label for the totals row. Defaults to "Total".}

\item{first_row}{If \code{TRUE}, the totals row will be placed first in
the output. If \code{FALSE} (default), it will be placed last.}

\item{wt}{<\code{\link[rlang:args_data_masking]{data-masking}}> Frequency weights.
Can be \code{NULL} or a variable:
\itemize{
\item If \code{NULL} (the default), counts the number of rows in each group.
\item If a variable, computes \code{sum(wt)} for each group.
}}

\item{sort}{If \code{TRUE}, will show the largest groups at the top.}

\item{name}{The name of the new column in the output.

If omitted, it will default to \code{n}. If there's already a column called \code{n},
it will use \code{nn}. If there's a column called \code{n} and \code{nn}, it'll use
\code{nnn}, and so on, adding \code{n}s until it gets a new name.}

\item{.drop}{Handling of factor levels that don't appear in the data, passed
on to \code{\link[dplyr:group_by]{dplyr::group_by()}}. If FALSE will include counts for empty groups
(i.e. for levels of factors that don't exist in the data).}
}
\value{
A data frame with counts for each grouping level, along with a
"totals" row with the column totals for the totaled variable.
}
\description{
This variant of \code{\link[dplyr:count]{dplyr::count()}} adds a row with column totals. Totals
are computed for the first column passed to \code{...} unless otherwise specified
in \code{totals_for}.
}
\examples{
mtcars \%>\%
  count_with_total(cyl)

mtcars \%>\%
  count_with_total(cyl, gear)

mtcars \%>\%
  count_with_total(cyl, gear, totals_for = gear)

}
\concept{\code{count()} variants}
