% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/util.R
\name{is_coercible_numeric}
\alias{is_coercible_numeric}
\alias{is_coercible_integer}
\alias{is_coercible_logical}
\title{Test for data encoded as other formats}
\usage{
is_coercible_numeric(x, all = FALSE, na = c("NA", "TRUE"))

is_coercible_integer(x, all = FALSE, na = c("NA", "TRUE"))

is_coercible_logical(
  x,
  all = FALSE,
  na = c("NA", "TRUE"),
  numeric = c("binary", "any")
)
}
\arguments{
\item{x}{Vector to be tested}

\item{all}{If \code{TRUE}, returns a single logical indicating whether every
element of \code{x} is coercible. If \code{FALSE} (the default), returns a logical
vector the same length as \code{x} testing each element of \code{x}.}

\item{na}{Should \code{NA} values test \code{NA} (the default) or \code{TRUE}?}

\item{numeric}{For \code{is_coercible_logical}, should any numeric value test
\code{TRUE}, or only \code{0} and \code{1} (the default)?}
}
\description{
Tests whether each element of a vector can be coerced to another type. See
examples.
}
\examples{
x <- c("1", "-1.23", "$1,234", NA)
is_coercible_numeric(x)
# TRUE  TRUE FALSE    NA
is_coercible_numeric(x, na = "TRUE")
# TRUE  TRUE FALSE  TRUE
is_coercible_numeric(x, all = TRUE)
# FALSE

is_coercible_integer(x)
# TRUE FALSE FALSE    NA

y <- c("TRUE", "T", "F", "YES", "NA", NA)
is_coercible_logical(y)
# TRUE  TRUE  TRUE FALSE FALSE    NA

z <- c(0, 1, 2, .1, -1)
is_coercible_logical(z)
# TRUE  TRUE FALSE FALSE FALSE
is_coercible_logical(z, numeric = "any")
# TRUE TRUE TRUE TRUE TRUE

}
