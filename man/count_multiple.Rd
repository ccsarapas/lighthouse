% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_group.R, R/group_summary.R
\name{count_multiple}
\alias{count_multiple}
\title{Count observations for multiple variables}
\usage{
count_multiple(
  .data,
  ...,
  .pct = TRUE,
  wt = NULL,
  sort = FALSE,
  name = NULL,
  na.rm = FALSE,
  .by = NULL,
  .drop = TRUE
)

count_multiple(
  .data,
  ...,
  .pct = TRUE,
  wt = NULL,
  sort = FALSE,
  name = NULL,
  na.rm = FALSE,
  .by = NULL,
  .drop = TRUE
)
}
\arguments{
\item{.data}{A data frame.}

\item{...}{Columns to count frequencies for. Can be named expressions.}

\item{.pct}{If \code{TRUE} (default), include percentages.}

\item{sort}{If \code{TRUE}, sort output by frequency.}

\item{name}{Name for the frequency column. Default is \"n\".}

\item{na.rm}{If \code{TRUE}, remove rows with \code{NA} values.}

\item{.drop}{If \code{TRUE} (default), drop unused factor levels.}
}
\value{
A data frame with columns:
\itemize{
\item Any grouping variables from the input \code{data} or specified in \code{.by}.
\item \code{Variable}: The name of the column being counted.
\item \code{Value}: The unique values from the counted column.
\item \code{n}: The frequency of each unique value.
\item \code{pct}: (If \code{.pct = TRUE}) The percentage each count represents within its variable.
}

A data frame with columns:
\itemize{
\item Any grouping variables from the input \code{data} or specified in \code{.by}.
\item \code{Variable}: The name of the column being counted.
\item \code{Value}: The unique values from the counted column.
\item \code{n}: The frequency of each unique value.
\item \code{pct}: (If \code{.pct = TRUE}) The percentage each count represents within its variable.
}
}
\description{
This variant of \code{\link[dplyr:count]{dplyr::count()}} returns frequencies and (optionally) proportions for each column passed to \code{...}.

This variant of \code{\link[dplyr:count]{dplyr::count()}} returns frequencies and (optionally) proportions for each column passed to \code{...}.
}
\examples{
iris \%>\%
  count_multiple(Species, Sepal.Length > 5)

## note effects of grouping
# no grouping
ggplot2::mpg \%>\%
  count_multiple(year, drv, cyl)

# grouping w `group_by()`: counts and \% nested within groups, output is grouped
ggplot2::mpg \%>\%
  dplyr::group_by(year) \%>\%
  count_multiple(year, drv, cyl)

# grouping w `.by`: counts and \% nested within groups, output isn't grouped
ggplot2::mpg \%>\%
  count_multiple(drv, cyl, .by = year)

iris \%>\%
  count_multiple(Species, Sepal.Length > 5)

## note effects of grouping
# no grouping
ggplot2::mpg \%>\%
  count_multiple(year, drv, cyl)

# grouping w `group_by()`: counts and \% nested within groups, output is grouped
ggplot2::mpg \%>\%
  dplyr::group_by(year) \%>\%
  count_multiple(year, drv, cyl)

# grouping w `.by`: counts and \% nested within groups, output isn't grouped
ggplot2::mpg \%>\%
  count_multiple(drv, cyl, .by = year)

}
