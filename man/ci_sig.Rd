% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stats.R
\name{ci_sig}
\alias{ci_sig}
\title{Test whether a confidence interval excludes a given value}
\usage{
ci_sig(
  ll,
  ul,
  reference = 1,
  return = c("logical", "asterisks"),
  marks = c("*", NA_character_)
)
}
\arguments{
\item{ll}{a numeric vector containing confidence interval lower limits.}

\item{ul}{a numeric vector containing corresponding upper limits.}

\item{reference}{the value to check against. This will generally be the null
value for the relevant test (e.g., 1 for odds ratios, 0 for beta
coefficients).}

\item{return}{if \code{"logical"}, will return a logical vector indicating whether
each confidence interval excludes \code{reference}. If \code{asterisks}, will return a
character vector, using the characters passed to \code{marks}.}

\item{marks}{a length-2 vector specifying strings to mark significant and
non-significant results when \code{return = "asterisks"}.}
}
\value{
\itemize{
\item If \verb{return = \\"logical\\"} (default), a logical vector.
\item If \verb{return = \\"asterisks\\"}, a character vector.
}
}
\description{
Tests whether a confidence interval excldes a specified reference value. This
will generally be the null value for the relevant test, such that excluding
this value indicates the test is statistically significant.
}
\examples{
beta_CIs <- glm(
    Survived ~ Sex * Age,
    family = binomial,
    weights = Freq,
    data = as.data.frame(Titanic)
  ) \%>\%
  confint()
OR_CIs <- tibble::as_tibble(exp(beta_CIs), rownames = "term")
beta_CIs <- tibble::as_tibble(beta_CIs, rownames = "term")

beta_CIs \%>\%
  dplyr::mutate(sig = ci_sig(`2.5 \%`, `97.5 \%`))

beta_CIs \%>\%
  dplyr::mutate(sig = ci_sig(`2.5 \%`, `97.5 \%`, return = "asterisks"))

beta_CIs \%>\%
  dplyr::mutate(sig = ci_sig(`2.5 \%`, `97.5 \%`, return = "asterisks", marks = c("*", "ns")))

OR_CIs \%>\%
  dplyr::mutate(sig = ci_sig(`2.5 \%`, `97.5 \%`, reference = 1, return = "asterisks"))

}
